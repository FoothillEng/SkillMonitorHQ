generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum StudentLevel {
  LEVEL_1
  LEVEL_2
  LEVEL_3
}

model User {
  id            String        @id @default(uuid())
  studentId     Int           @unique
  firstName     String
  lastName      String
  avatar        String
  level         StudentLevel  @default(LEVEL_1)
  lifetimeHours Int           @default(0)
  admin         Boolean       @default(false)
  machines      UserMachine[]
  sessions      Session[]
}

model Machine {
  id    Int           @id @default(autoincrement())
  uuid  String        @unique @default(uuid())
  name  String        @unique
  users UserMachine[]

  @@unique([id, uuid])
}

model UserMachine {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  machine     Machine   @relation(fields: [machineId, machineUUID], references: [id, uuid], onDelete: Cascade)
  machineId   Int // do i rlly need both of these linked?
  machineUUID String    @unique
  duration    Int       @default(0) // seconds, computed on session end
  usageCount  Int       @default(0)
  tourPassed  Boolean   @default(false)
  testPassed  Boolean   @default(false)
  // assistants  Assistant[]
  sessions    Session[]

  @@unique([machineId, machineUUID])
}

model Session {
  id            String      @id @default(uuid())
  startTime     DateTime    @default(now())
  endTime       DateTime?
  duration      Int? //   seconds, computed on session end
  userMachine   UserMachine @relation(fields: [userMachineId], references: [id])
  userMachineId Int
  User          User        @relation(fields: [userId], references: [id])
  userId        String
}
